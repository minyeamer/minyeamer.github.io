<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Python on Minystory</title>
    <link>https://minyeamer.github.io/tags/python/</link>
    <description>Recent content in Python on Minystory</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 22 Mar 2022 00:00:00 +0900</lastBuildDate><atom:link href="https://minyeamer.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Index] Solved Problems</title>
      <link>https://minyeamer.github.io/blog/algorithm-index/</link>
      <pubDate>Tue, 22 Mar 2022 00:00:00 +0900</pubDate>
      
      <guid>https://minyeamer.github.io/blog/algorithm-index/</guid>
      <description>References Name Link HackerRank https://www.hackerrank.com/domains/sql Leetcode https://leetcode.com/problemset/all/ Programmers https://school.programmers.co.kr/learn/challenges Baekjoon https://www.acmicpc.net/ solved.ac https://solved.ac/ Big-O List minyeamer/references/big-o.md Math Reference Number Level Problem Name Subcategory Problem Link Solution Link Programmers 60059 Lv3 🥇 자물쇠와 열쇠 Matrix Link Link Programmers 17687 Lv2 🥈 n진수 게임 Link Link Programmers 12977 Lv1 🥉 소수 만들기 Combination Link Link Baekjoon 1010 Silver 🥈 다리 놓기 Combination Link Link Baekjoon 1463 Silver 🥈 1로 만들기 Link Link Baekjoon 1676 Silver 🥈 팩토리얼 0의 개수 Link Link Baekjoon 2108 Silver 🥈 통계학 Link Link Baekjoon 1049 Silver 🥈 기타줄 Link Link Baekjoon 2475 Bronze 🥉 검증수 Link Link Baekjoon 2609 Bronze 🥉 최대공약수와 최소공배수 Combination Link Link Baekjoon 11050 Bronze 🥉 이항 계수 1 Combination Link Link String Reference Number Level Problem Name Subcategory Problem Link Solution Link Programmers 60057 Lv2 🥈 문자열 압축 Link Link Programmers 72410 Lv1 🥉 신규 아이디 추천 Regular Expression Link Link Baekjoon 22859 Gold 🥇 HTML 파싱 Regular Expression Link Link Baekjoon 15829 Bronze 🥉 Hashing Hashing Link Link Hash Table Reference Number Level Problem Name Subcategory Problem Link Solution Link Programmers 42577 Lv2 🥈 전화번호 목록 Link Link Programmers 42578 Lv2 🥈 위장 Set Link Link Programmers 42888 Lv2 🥈 오픈채팅방 Link Link Programmers 1845 Lv1 🥉 폰켓몬 Link Link Programmers 42576 Lv1 🥉 완주하지 못한 선수 Counter Link Link Programmers 92334 Lv1 🥉 신고 결과 받기 Dictionary Link Link Programmers 81301 Lv1 🥉 숫자 문자열과 영단어 Dictionary Link Link Baekjoon 1620 Silver 🥈 나는야 포켓몬 마스터 이다솜 Dictionary Link Link Baekjoon 1764 Silver 🥈 듣보잡 Set Link Link Baekjoon 1920 Silver 🥈 수 찾기 Set Link Link Baekjoon 10816 Silver 🥈 숫자 카드 2 Counter Link Link Stack/Queue Reference Number Level Problem Name Subcategory Problem Link Solution Link Programmers 17680 Lv2 🥈 캐시 Deque Link Link Baekjoon 5430 Gold 🥇 AC Deque Link Link Baekjoon 1874 Silver 🥈 스택 수열 Stack Link Link Baekjoon 1966 Silver 🥈 프린터 큐 Deque Link Link Baekjoon 2164 Silver 🥈 카드2 Queue Link Link Baekjoon 4949 Silver 🥈 균형잡힌 세상 Stack Link Link Baekjoon 9012 Silver 🥈 괄호 Stack Link Link Baekjoon 10773 Silver 🥈 제로 Stack Link Link Baekjoon 10828 Silver 🥈 스택 Stack Link Link Baekjoon 10845 Silver 🥈 큐 Queue Link Link Baekjoon 10866 Silver 🥈 덱 Deque Link Link Baekjoon 11866 Silver 🥈 요세푸스 문제 0 Stack Link Link Heap Reference Number Level Problem Name Subcategory Problem Link Solution Link Baekjoon 7662 Gold 🥇 이중 우선순위 큐 Guidance Link Link Baekjoon 1927 Silver 🥈 최소 힙 Guidance Link Link Sorting Reference Number Level Problem Name Subcategory Problem Link Solution Link Leetcode 1337 Easy 🥉 The K Weakest Rows</description>
    </item>
    
    <item>
      <title>Big-O</title>
      <link>https://minyeamer.github.io/blog/big-o-list/</link>
      <pubDate>Sun, 20 Mar 2022 18:12:00 +0900</pubDate>
      
      <guid>https://minyeamer.github.io/blog/big-o-list/</guid>
      <description>List Operation Example Big-O Index l[i] O(1) Store l[i] = 0 O(1) Length len(l) O(1) Append l.append(x) O(1) Pop l.pop() O(1) Slice l[a:b] O(b-a) Construction list(x) O(len(x)) Check l1 == l2 O(len(n)) Insert l[a:b] = x O(n) Containment x in l O(n) Copy l.copy() O(n) Remove l.remove() O(n) Count l.count(x) O(n) Index l.index(x) O(n) Pop l.pop(i) O(n) Extreme value min(l)/max(l) O(n) Iteration for v in l: O(n) Reverse l.reverse() O(n) Sort l.</description>
    </item>
    
    <item>
      <title>[코드라이언] 파이썬 심화</title>
      <link>https://minyeamer.github.io/blog/aischool-00-02-python-advanced/</link>
      <pubDate>Sun, 20 Mar 2022 17:59:00 +0900</pubDate>
      
      <guid>https://minyeamer.github.io/blog/aischool-00-02-python-advanced/</guid>
      <description>Crawling 크롤러는 웹 페이지의 데이터를 모아주는 소프트웨어 크롤링은 크롤러를 사용해 웹 페이지의 데이터를 추출해 내는 행위 Request request 모듈의 get() 함수는 서버에게 html 정보를 요청 get() 함수는 url, 파라미터 값을 받고 request.Response를 반환 정상적인 응답을 받을 경우 Response [200] 반환 응답값을 reponse 변수에 넣고 response.text를 출력하면 html 코드 출력 BeautifulSoup bs4 모듈의 BeautifulSoup 기능은 입력값을 의미있는 데이터로 변환 1 2 3 4 5 soup = BeautifulSoup(response.text, &amp;#39;html.parser&amp;#39;) soup.title # html 코드에서 title에 해당하는 태그를 반환 soup.</description>
    </item>
    
    <item>
      <title>[코드라이언] 파이썬 기초</title>
      <link>https://minyeamer.github.io/blog/aischool-00-01-python-basic/</link>
      <pubDate>Sun, 20 Mar 2022 16:53:00 +0900</pubDate>
      
      <guid>https://minyeamer.github.io/blog/aischool-00-01-python-basic/</guid>
      <description>for문 문장을 여러 번 실행할 떄 복사 붙여넣기로 길게 늘이지 않고 단순하게 표현하기 위한 구문 for문에 적용되는 문장은 들여쓰기를 해야 함 1 2 for _ in range(30): print(random.choice([&amp;#34;a&amp;#34;, &amp;#34;b&amp;#34;, &amp;#34;c&amp;#34;])) while문 for문과 마찬가지로 문장을 반복실행할 수 있는 구문 조건을 충족할 경우 반복을 멈춤 True를 조건으로 사용 시 무한루프 발생 while True: break 명령어를 통해 반복문 종료 가능 변수 객체에 이름표를 붙이고 이름표가 불리면 내용물인 객체를 반환
lunch = random.choice([&amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;c&amp;quot;]) 딕셔너리 &amp;ldquo;xx은 xx이다&amp;quot;를 코드로 표현한 자료구조 딕셔너리의 get 명령어는 Key에 해당하는 값을 반환 값을 추가할 때는 dict[a] = b 형식으로 추가 딕셔너리의 clear 명령어는 딕셔너리 내용을 초기화 집합 중복된 값을 제거하여 표현하는 자료구조 set()으로 집합 생성 합집합: set1 | set2 교집합: set1 &amp;amp; set2 차집합: set1 - set2 조건문 상황에 따른 처리를 하기 위한 구문 if 조건:으로 조건문 선언 같은 경우를 구할 땐 a == b 나머지 경우에 대해서는 else 사용 pip/conda pip: 파이썬에서 지원받는 패키지만을 가져옴 (라이브러리만 맞으면 설치) conda: 아나콘다에서 지원받는 패키지만을 가져옴 (아나콘다에서 유리) conda의 장점: 기존 Python 및 라이브러리 버전 충돌을 체크함 conda의 단점: 설치 속도가 너무 느림 설치가 너무 느리거나 다른 라이브러리에 대한 영향이 없을 경우 pip 사용 라이브러리 참조 파일 생성 시 pip install -r requirements.</description>
    </item>
    
    <item>
      <title>[AI SCHOOL 5기] 첫 주차</title>
      <link>https://minyeamer.github.io/blog/ai-school-00-00-start/</link>
      <pubDate>Sun, 20 Mar 2022 11:38:00 +0900</pubDate>
      
      <guid>https://minyeamer.github.io/blog/ai-school-00-00-start/</guid>
      <description>AI SCHOOL 지원 과정 아직 군에 복무 중이던 시절, 전역한 후 바로 취업하기 위해 국비, 부트캠프 과정을 탐색하던 중 AI SCHOOL을 발견했다. 이떄 개인적으로 가격 비교, 사용자 맞춤 추천 등의 기능을 포함한 서비스를 구상하고 있었는데 AI 기술이 바로 그것이었다. AI SCHOOL과 함께 눈에 들었던 게 SW마에스트로였지만 5월까지는 군인 신분인 나와는 맞지 않아 아쉽게 포기했다. AI SCHOOL의 지원 과정은 서류(자기소개서)와 과제(영상) 순으로 진행되었다. 영상을 찍어야 할 때 아직 군대 안에 있었기에 어려웠지만 모종의 방법으로 촬영에 성공했다.</description>
    </item>
    
  </channel>
</rss>
