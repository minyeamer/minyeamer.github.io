<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Numpy on Minystory</title>
    <link>https://minyeamer.github.io/tags/numpy/</link>
    <description>Recent content in Numpy on Minystory</description>
    <generator>Hugo</generator>
    <language>ko-kr</language>
    <lastBuildDate>Tue, 29 Mar 2022 16:11:00 +0900</lastBuildDate>
    <atom:link href="https://minyeamer.github.io/tags/numpy/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[AI SCHOOL 5기] 통계분석 실습 - Numpy &amp; Pandas</title>
      <link>https://minyeamer.github.io/post/study/ai-school/04-statistical-analysis/aischool-04-01-numpy-pandas/</link>
      <pubDate>Tue, 29 Mar 2022 16:11:00 +0900</pubDate>
      <guid>https://minyeamer.github.io/post/study/ai-school/04-statistical-analysis/aischool-04-01-numpy-pandas/</guid>
      <description>&lt;h1 id=&#34;numpy&#34;&gt;Numpy&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#numpy&#34;&gt;#&lt;/a&gt;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Numpy Array 내부의 데이터는 하나의 자료형으로 통일&lt;/li&gt;&#xA;&lt;li&gt;Numpy Array에 값을 곱하면 전체 데이터 그대로 복사되는 리스트와 달리 데이터에 각각 곱해짐&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;np.array([])&lt;/code&gt;: Numpy Array 생성&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;np.dtype&lt;/code&gt;: Numpy Array의 Data Type&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;np.shape&lt;/code&gt;: Numpy Array 모양(차원)&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;np.arange()&lt;/code&gt;: &lt;code&gt;range&lt;/code&gt;를 바탕으로 Numpy Array 생성&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;np.reshape()&lt;/code&gt;: Numpy Array 모양을 변경, 열에 &lt;code&gt;-1&lt;/code&gt;을 입력하면 자동 계산&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;np.dot()&lt;/code&gt;: 행렬곱&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;pandas&#34;&gt;Pandas&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#pandas&#34;&gt;#&lt;/a&gt;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;pd.Series([], index=[])&lt;/code&gt;: Key가 있는 리스트(Series) 생성&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Series.values&lt;/code&gt;: Series의 값&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Series.index&lt;/code&gt;: Series의 키 값&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;df.ammount&lt;/code&gt;: 띄어쓰기 없이 영단어로 구성된 열은 변수처럼 꺼내 쓸 수 있음&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;df.insert(column, &#39;key&#39;, &#39;value&#39;)&lt;/code&gt;: index 기준으로 특정 위치에 새로운 열 삽입&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;df[(con1) &amp;amp; (con2)]&lt;/code&gt;: 여러 개의 조건을 사용할 땐 각각의 조건을 괄호 안에 묶어야 함&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;df[&#39;key&#39;].value_counts()&lt;/code&gt;: 값의 출현 빈도 합계 (&lt;code&gt;sort=False&lt;/code&gt;로 정렬 해제)&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;df[&#39;key&#39;].value_counts().plot(kind=&#39;pie&#39;)&lt;/code&gt;: 빈도수를 기준으로 원형차트 생성&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;df[&#39;key&#39;].apply()&lt;/code&gt;: 조건에 따라 변환된 값을 가진 열 반환&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;df[&#39;key&#39;].replace()&lt;/code&gt;: 변환값이 1대1 대응 시 &lt;code&gt;apply()&lt;/code&gt; 대신 &lt;code&gt;replace()&lt;/code&gt; 사용 가능&lt;br&gt;&#xA;&lt;code&gt;df[&#39;gender&#39;].replace([1, 2], [&#39;male&#39;, &#39;female&#39;])&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
