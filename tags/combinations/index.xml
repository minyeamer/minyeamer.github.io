<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Combinations on Minystory</title>
    <link>https://minyeamer.github.io/tags/combinations/</link>
    <description>Recent content in Combinations on Minystory</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 23 Aug 2022 11:23:00 +0900</lastBuildDate><atom:link href="https://minyeamer.github.io/tags/combinations/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[백준 15686] 치킨 배달 (Python)</title>
      <link>https://minyeamer.github.io/blog/boj-problems-15686/</link>
      <pubDate>Tue, 23 Aug 2022 11:23:00 +0900</pubDate>
      
      <guid>https://minyeamer.github.io/blog/boj-problems-15686/</guid>
      <description>문제 링크 https://www.acmicpc.net/problem/15686 문제 해설 Idea Combinations 최대 집의 개수가 100, 최대 치킨집의 개수가 13으로 매우 적은 경우의 수를 가지고 있기 때문에,
모든 조합에 대한 완전탐색을 통해 최소 거리를 계산 초기에는 집에 대한 치킨 거리가 작은 치킨집을 우선적으로 선발해서,
폐업하지 않은 치킨집에 대한 치킨 거리의 최소 합을 계산했지만 틀림 이후 combinations 모듈을 활용한 완전탐색을 통해 통과 Time Complexity O(N * nCr) ~ 100,000 Data Size N: 2 &amp;lt;= int &amp;lt;= 50 M: 1 &amp;lt;= int &amp;lt;= 13 cell in (0, 1, 2) count(house): 1 &amp;lt;= int &amp;lt; 2N count(chicken): M &amp;lt;= int &amp;lt;= 13 해설 코드 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 from itertools import combinations import sys input = sys.</description>
    </item>
    
  </channel>
</rss>
