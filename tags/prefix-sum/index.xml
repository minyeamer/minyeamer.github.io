<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Prefix Sum on Minystory</title>
    <link>https://minyeamer.github.io/tags/prefix-sum/</link>
    <description>Recent content in Prefix Sum on Minystory</description>
    <image>
      <url>https://github.com/minyeamer/til/blob/main/.media/main/thumbnail.png?raw=true</url>
      <link>https://github.com/minyeamer/til/blob/main/.media/main/thumbnail.png?raw=true</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 31 Aug 2022 11:01:05 +0900</lastBuildDate><atom:link href="https://minyeamer.github.io/tags/prefix-sum/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[백준 21758] 꿀 따기 (Python)</title>
      <link>https://minyeamer.github.io/blog/boj-problems-21758/</link>
      <pubDate>Wed, 31 Aug 2022 11:01:05 +0900</pubDate>
      
      <guid>https://minyeamer.github.io/blog/boj-problems-21758/</guid>
      <description>문제 링크 https://www.acmicpc.net/problem/21758 문제 해설 Idea 벌이 같은 방향을 향하는 경우 상자까지의 총합에서 두 벌의 시작 위치에 있는 값을 제외 벌이 다른 방향을 향하는 경우 상자까지의 총합에 절댓값을 취해서 더함 Data Size N: 3 &amp;lt;= int &amp;lt;= 100,000 arr[i]: 1 &amp;lt;= int &amp;lt;= 10,000 해설 코드 1 2 3 4 5 6 7 8 9 10 11 12 13 14 N = int(input()) arr = list(map(int, input().split())) forward, backward = [arr[0]]+[0]*(N-1), [0]*(N-1)+[arr[-1]] for i in range(1,N): forward[i] = forward[i-1] + arr[i] backward[N-i-1] = backward[N-i] + arr[N-i-1] answer = 0 for i in range(1,N-1): answer = max(answer, forward[N-1]*2-forward[0]-forward[i-1]-arr[i]*2) answer = max(answer, backward[0]*2-backward[N-1]-backward[N-i]-arr[N-i-1]*2) answer = max(answer, forward[i]-arr[0]+backward[i]-arr[-1]) print(answer) </description>
    </item>
    
    <item>
      <title>[백준 21318] 피아노 체조 (Python)</title>
      <link>https://minyeamer.github.io/blog/boj-problems-21318/</link>
      <pubDate>Fri, 12 Aug 2022 12:47:00 +0900</pubDate>
      
      <guid>https://minyeamer.github.io/blog/boj-problems-21318/</guid>
      <description>문제 링크 https://www.acmicpc.net/problem/21318 문제 해설 Idea Prefix Sum 실수한 곡에 대한 누적합을 구하고 인덱싱을 통해 특정 구간에 대한 누적합 출력 마지막 곡은 항상 성공하기 때문에 y에 대한 누적합과 y-1에 대한 누적합이 다르면 1 감소 Time Complexity Prefix Sum: O(N) = 100,000 Data Size N: 1 &amp;lt;= int &amp;lt;= 100,000 scores: int(10^9) * N Q: 1 &amp;lt;= int &amp;lt;= 100,000 해설 코드 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import sys input = sys.</description>
    </item>
    
  </channel>
</rss>
