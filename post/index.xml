<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Minystory</title>
    <link>https://minyeamer.github.io/post/</link>
    <description>Recent content in Posts on Minystory</description>
    <generator>Hugo</generator>
    <language>ko-kr</language>
    <lastBuildDate>Tue, 28 Oct 2025 23:23:55 +0900</lastBuildDate>
    <atom:link href="https://minyeamer.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[OSSCA] 2025 오픈소스 컨트리뷰션 아카데미 - PyTorch 문서 한글화 참여 후기</title>
      <link>https://minyeamer.github.io/blog/openup-handson/</link>
      <pubDate>Tue, 28 Oct 2025 23:23:55 +0900</pubDate>
      <guid>https://minyeamer.github.io/blog/openup-handson/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://drive.google.com/thumbnail?id=1ZWa1RVcRDog23_CJjHIlAe2vlGIvGD5N&amp;amp;sz=w1500&#34; alt=&#34;ossca-cover&#34; /&gt;&lt;/p&gt;&#xA;&lt;blockquote class=&#34;book-hint success&#34;&gt;&#xA;  &#xA;&lt;p style=&#34;margin-bottom: 0;&#34;&gt;&lt;i class=&#34;fa-solid fa-lightbulb&#34;&gt;&lt;/i&gt; 오픈소스 컨트리뷰션 아카데미 소개&lt;/p&gt;&#xA;&lt;ul style=&#34;margin: 0.5rem 0;&#34;&gt;&#xA;&lt;li&gt;오픈소스 컨트리뷰션 아카데미 &lt;b&gt;체험형 프로그램&lt;/b&gt;은 오픈소스 프로젝트에 익숙하지 않은 예비 개발자를 위한 &lt;b&gt;6주 간&lt;/b&gt;의 속성 컨트리뷰션 체험형 패키지 입니다.&lt;/li&gt;&#xA;&lt;li&gt;제가 참여한 &lt;b&gt;PyTorch 문서 한글화 프로젝트&lt;/b&gt;는 파이토치 한국어 튜토리얼 문서를 번역하여 PR을 올리고 멘토/멘티로부터 리뷰를 받는 활동을 했습니다.&lt;/li&gt;&#xA;&lt;li&gt;아카데미 활동에 관심있다면 &lt;a href=&#34;https://www.contribution.ac/&#34; target=&#34;_blank&#34;&gt;해당 링크&lt;/a&gt;로 이동하여 향후 일정을 확인할 수 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;25년 9월 17일부터 10월 31일까지 6주간 OSSCA에 멘티로 참여하면서 경험한 과정을 공유드리고자 합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>[Python] 만개의 레시피 데이터 수집</title>
      <link>https://minyeamer.github.io/blog/10000-recipe/</link>
      <pubDate>Sun, 26 Mar 2023 18:52:14 +0900</pubDate>
      <guid>https://minyeamer.github.io/blog/10000-recipe/</guid>
      <description>&lt;p&gt;최근 레시피 생성을 목적으로 한 사이드 프로젝트에 참여하게 되었는데&lt;br&gt;&#xA;모델 학습을 위한 만개의 레시피 데이터 크롤링을 진행해보았습니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;스키마-구성&#34;&gt;스키마 구성&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%ec%8a%a4%ed%82%a4%eb%a7%88-%ea%b5%ac%ec%84%b1&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;기존엔 레시피 명칭과 음식 재료 정보만을 수집할 계획이었지만,&lt;br&gt;&#xA;만개의 레시피의 각 페이지를 살펴보면서 추가적으로 가져갈만한 데이터가 있음을 확인하여&lt;br&gt;&#xA;우선적으로 테이블 관계 및 스키마를 구성해보았습니다.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/minyeamer/til/blob/main/.media/data/crawling/10000-recipe/schema.png?raw=true&#34; alt=&#34;schema&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;초기에 만개의 레시피와 공공데이터를 데이터 소스로 삼았기 때문에,&lt;br&gt;&#xA;만개의 레시피에 대한 DB &lt;code&gt;_10000&lt;/code&gt;, 공공데이터에 대한 DB &lt;code&gt;food&lt;/code&gt;로 구성했습니다.&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;_10000&lt;/code&gt; DB 내 테이블은 만개의 레시피 내 각각의 페이지에서 가져온 데이터로 구성되며,&lt;br&gt;&#xA;크게 카테고리, 레시피, 사용자 단위로 구분할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>[Python] requests로 네이버 스마트스토어센터 로그인 구현하기 (3)</title>
      <link>https://minyeamer.github.io/blog/smartstore-login-3/</link>
      <pubDate>Sun, 04 Dec 2022 10:22:03 +0900</pubDate>
      <guid>https://minyeamer.github.io/blog/smartstore-login-3/</guid>
      <description>&lt;p&gt;앞선 네이버 로그인 구현 과정을 통해 네이버 로그인에 대해 이해하고&lt;br&gt;&#xA;스마트스토어센터 로그인 결과로 얻을 수 있는 쿠키 값의 일부를 획득했습니다.&lt;/p&gt;&#xA;&lt;div class=&#34;book-codeblock&#34; data-lang=&#34;python&#34;&gt;&#xA;  &lt;div class=&#34;code-actions&#34;&gt;&#xA;&#xA;    &lt;button class=&#34;code-copy-btn code-action&#34; onclick=&#34;copyCode(this)&#34;&gt;&#xA;      &lt;i class=&#34;fa-solid fa-copy&#34;&gt;&lt;/i&gt;Copy&#xA;    &lt;/button&gt;&#xA;&#xA;    &lt;span class=&#34;code-language code-action&#34;&gt;python&lt;/span&gt;&#xA;&#xA;  &lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;cookies&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;NNB&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;nid_inf&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;NID_AUT&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;NID_SES&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;NID_JKL&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;CBI_SES&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;CBI_CHK&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;NSI&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&lt;p&gt;하지만, 스마트스토어센터에서 데이터를 가져오기 위해 필요한 쿠키 값은&lt;br&gt;&#xA;&lt;code&gt;CBI_SES&lt;/code&gt;, &lt;code&gt;CBI_CHK&lt;/code&gt;, &lt;code&gt;NSI&lt;/code&gt; 세 가지 값이기 때문에&lt;br&gt;&#xA;지금까지는 준비 과정에 불과했다고 할 수 있습니다.&lt;/p&gt;&#xA;&lt;p&gt;이번 게시글에서는 스마트스토어센터 로그인 과정을 이해하고&lt;br&gt;&#xA;직접 구현해보면서 &lt;code&gt;SmartstoreLogin&lt;/code&gt; 클래스를 완성해보겠습니다.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;스마트스토어센터-로그인-이해&#34;&gt;스마트스토어센터 로그인 이해&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%ec%8a%a4%eb%a7%88%ed%8a%b8%ec%8a%a4%ed%86%a0%ec%96%b4%ec%84%bc%ed%84%b0-%eb%a1%9c%ea%b7%b8%ec%9d%b8-%ec%9d%b4%ed%95%b4&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;지금까지 스마트스토어센터의 두 가지 로그인 방식 중&lt;br&gt;&#xA;네이버 로그인 방식으로 로그인을 수행하기 위해,&lt;br&gt;&#xA;실제 네이버 로그인에 대한 이해 및 구현을 진행했습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>[Python] requests로 네이버 스마트스토어센터 로그인 구현하기 (2)</title>
      <link>https://minyeamer.github.io/blog/smartstore-login-2/</link>
      <pubDate>Sat, 03 Dec 2022 16:11:42 +0900</pubDate>
      <guid>https://minyeamer.github.io/blog/smartstore-login-2/</guid>
      <description>&lt;p&gt;이번 게시글에서는 스마트스토어센터 페이지에서 데이터를 수집하는 자동화 프로그램을 제작하기 위한&lt;br&gt;&#xA;첫 번째 과정으로 네이버 로그인을 구현할 것입니다.&lt;/p&gt;&#xA;&lt;p&gt;앞선 게시글에서 데이터를 수집하는 방식에 대해 알아보면서&lt;br&gt;&#xA;로그인이 필요한 페이지에 접근하기 다음과 같은 쿠키 값이 필요함을 확인했습니다.&lt;/p&gt;&#xA;&lt;div class=&#34;book-codeblock&#34; data-lang=&#34;python&#34;&gt;&#xA;  &lt;div class=&#34;code-actions&#34;&gt;&#xA;&#xA;    &lt;button class=&#34;code-copy-btn code-action&#34; onclick=&#34;copyCode(this)&#34;&gt;&#xA;      &lt;i class=&#34;fa-solid fa-copy&#34;&gt;&lt;/i&gt;Copy&#xA;    &lt;/button&gt;&#xA;&#xA;    &lt;span class=&#34;code-language code-action&#34;&gt;python&lt;/span&gt;&#xA;&#xA;  &lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;cookies&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;NNB&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;nid_inf&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;NID_AUT&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;NID_SES&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;NID_JKL&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;CBI_SES&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;CBI_CHK&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;NSI&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&lt;p&gt;위 키값들은 앞으로 로그인 프로세스를 파악하는 과정에서 중요하게 활용됩니다.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;네이버-로그인-이해&#34;&gt;네이버 로그인 이해&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%eb%84%a4%ec%9d%b4%eb%b2%84-%eb%a1%9c%ea%b7%b8%ec%9d%b8-%ec%9d%b4%ed%95%b4&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;네이버 스마트스토어센터 로그인 과정에서 진행되는 네이버 로그인은&lt;br&gt;&#xA;일반적인 네이버 로그인과는 다른 과정으로 진행됩니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>[Python] requests로 네이버 스마트스토어센터 로그인 구현하기 (1)</title>
      <link>https://minyeamer.github.io/blog/smartstore-login-1/</link>
      <pubDate>Sat, 03 Dec 2022 13:56:14 +0900</pubDate>
      <guid>https://minyeamer.github.io/blog/smartstore-login-1/</guid>
      <description>&lt;p&gt;네이버 스마트스토어센터에서는 매출 향상에 도움을 주는 유용한 통계 데이터를 제공해줍니다.&lt;br&gt;&#xA;쇼핑몰 데이터를 분석하는 입장에서 무료로 제공되는 이런 데이터는 큰 도움이 되지만,&lt;br&gt;&#xA;대부분이 엑셀 파일 다운로드를 지원하지 않고 빈번하게 수치가 바뀌는 데이터를 각각의 메뉴에서 매번 확인하기도 어렵습니다.&lt;br&gt;&#xA;이런 데이터를 자동화 프로그램으로 수집 및 적재할 수 있다면 업무 효율을 크게 향상시킬 수 있을 것입니다.&lt;/p&gt;&#xA;&lt;p&gt;이번 게시글에서는 실제 네이버 스마트스토어 로그인 구현에 앞서&lt;br&gt;&#xA;데이터 수집에 대한 간단한 설명을 진행하고 네이버 로그인 구현의 바탕이 되는 클래스와 메소드를 정의합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hugo 블로그 만들기 (3) - 테마 커스터마이징</title>
      <link>https://minyeamer.github.io/blog/hugo-blog-3/</link>
      <pubDate>Thu, 08 Sep 2022 15:52:12 +0900</pubDate>
      <guid>https://minyeamer.github.io/blog/hugo-blog-3/</guid>
      <description>&lt;h2 id=&#34;hugo-블로그-만들기-3---테마-커스터마이징&#34;&gt;Hugo 블로그 만들기 (3) - 테마 커스터마이징&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#hugo-%eb%b8%94%eb%a1%9c%ea%b7%b8-%eb%a7%8c%eb%93%a4%ea%b8%b0-3---%ed%85%8c%eb%a7%88-%ec%bb%a4%ec%8a%a4%ed%84%b0%eb%a7%88%ec%9d%b4%ec%a7%95&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;블로그를 구성할 때 기술적, 시간적 한계 때문에 이미 만들어진 테마를 사용하게 됩니다.&lt;br&gt;&#xA;제가 Hugo 블로그를 만들 때도 이러한 문제 때문에 &lt;a href=&#34;https://github.com/adityatelange/hugo-PaperMod&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;PaperMod&lt;/a&gt; 테마를 사용했지만,&lt;br&gt;&#xA;블로그를 보다보면 만족스럽지 못한 부분이 발견됩니다.&lt;/p&gt;&#xA;&lt;p&gt;이번 포스트에서는 제가 PaperMod 테마를 커스터마이징한 과정을 안내해드리겠습니다.&lt;/p&gt;&#xA;&lt;h3 id=&#34;archive-search-추가하기&#34;&gt;Archive, Search 추가하기&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#archive-search-%ec%b6%94%ea%b0%80%ed%95%98%ea%b8%b0&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xA;&lt;p&gt;PaperMod 테마를 가져오면서 가장 신경쓰였던 부분은&lt;br&gt;&#xA;메인 메뉴가 Categories, Tags 두 개 뿐이었단 점입니다.&lt;/p&gt;&#xA;&lt;p&gt;Archive는 그렇다쳐도 Search 기능은 빼먹을 수 없는 부분이라 생각하기 때문에,&lt;br&gt;&#xA;Hugo 및 PaperMod 내 이슈를 참고하여 관련된 내용을 탐색했습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hugo 블로그 만들기 (2) - Utterances 댓글 적용</title>
      <link>https://minyeamer.github.io/blog/hugo-blog-2/</link>
      <pubDate>Thu, 08 Sep 2022 14:39:22 +0900</pubDate>
      <guid>https://minyeamer.github.io/blog/hugo-blog-2/</guid>
      <description>&lt;p&gt;Hugo 블로그는 기본적으로 댓글 기능을 제공하지는 않습니다.&lt;br&gt;&#xA;제가 사용하는 PaperMod 테마에서는 서드파티 서비스인 &lt;code&gt;Disqus&lt;/code&gt;를 위한 레이아웃이 존재하지만,&lt;br&gt;&#xA;저는 기본적인 블로그 운영을 Github 플랫폼 내에서 구성하고 싶기 때문에 다른 기능을 사용해보려 합니다.&lt;/p&gt;&#xA;&lt;p&gt;이번 포스트에서는 Utterances 댓글 기능을 추가하는 방법을 안내해드리겠습니다.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;utterances-설치하기&#34;&gt;Utterances 설치하기&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#utterances-%ec%84%a4%ec%b9%98%ed%95%98%ea%b8%b0&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Utterances는 Github issues 기반으로 댓글을 관리하는 기능입니다.&lt;br&gt;&#xA;무료 플랜에서 광고가 붙는 &lt;code&gt;Disqus&lt;/code&gt;와 다르게 별도의 유료 플랜이 없어 간편하게 사용할 수 있습니다.&lt;/p&gt;&#xA;&lt;p&gt;Utterances 설치는 단순히 레이아웃 상에서 댓글이 위치할 곳에 자바스크립트 코드를 삽입하면 됩니다.&lt;br&gt;&#xA;하지만, 선행적으로 &lt;a href=&#34;https://github.com/marketplace/utterances&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;해당 링크&lt;/a&gt;를 통해 Utterances와 연동시킬 저장소를 등록해야 합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hugo 블로그 만들기 (1) - Hugo 기본 구성</title>
      <link>https://minyeamer.github.io/blog/hugo-blog-1/</link>
      <pubDate>Thu, 08 Sep 2022 12:02:32 +0900</pubDate>
      <guid>https://minyeamer.github.io/blog/hugo-blog-1/</guid>
      <description>&lt;p&gt;얼마 전, 티스토리 블로그에서 &lt;a href=&#34;https://minyeamer.github.io/blog/jekyll-blog/&#34;&gt;Jekyll 블로그&lt;/a&gt;로 이동했는데,&lt;br&gt;&#xA;처음 기대했던 submodule을 활용한 효율적인 저장소 연동에서 어려움을 겪고 다른 대안을 탐색하게 되었습니다.&lt;/p&gt;&#xA;&lt;p&gt;Jekyll 블로그를 사용함에 있어서, Ruby 언어로 구성된 블로그 구조에 대해 이해하기 어려운데다가&lt;br&gt;&#xA;로컬 환경에서 Jekyll 블로그를 실행하면서 발생하는 에러를 처리하는데도 난항을 겪었는데,&lt;br&gt;&#xA;웹상에서 자동 배포가 이루어지는 과정에서 submodule인 TIL 저장소를 포스트로 인식하지 못하는 문제가 있었습니다.&lt;/p&gt;&#xA;&lt;p&gt;Jekyll 블로그의 대안으로 Hexo 및 Hugo 프레임워크에 주목했고,&lt;br&gt;&#xA;두 제품의 장단점을 비교하여 상대적으로 배포가 빠르고 현재까지도 업데이트가 이루어지는 Hugo를 선택했습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>깃허브 블로그 시작하기</title>
      <link>https://minyeamer.github.io/blog/jekyll-blog/</link>
      <pubDate>Tue, 30 Aug 2022 16:28:43 +0900</pubDate>
      <guid>https://minyeamer.github.io/blog/jekyll-blog/</guid>
      <description>&lt;p&gt;블로그를 처음 시작함에 있어서 모든 것이 준비된 호스팅 서비스의 편의성은 무시할 수 없습니다.&lt;br&gt;&#xA;저도 처음엔 코드를 직접 건드리는 자유도 높은 방식의 블로그에 진입 장벽을 느끼고&lt;br&gt;&#xA;가볍게 시작할 수 있는 티스토리를 통해 블로그에 입문했습니다.&lt;br&gt;&#xA;하지만, 개발적 지식을 학습하면서 깃허브에 마크다운 문서를 올리는 빈도가 늘어났고,&lt;br&gt;&#xA;깃허브에 올린 문서를 굳이 티스토리로 다시 옮겨 담는 것에 불편함을 느끼게 되었습니다.&lt;/p&gt;&#xA;&lt;p&gt;마크다운 문서를 자주 작성하고 깃허브 저장소를 학습 노트로 활용한다면,&lt;br&gt;&#xA;깃허브 블로그를 구성해보는 것이 문서를 통합적으로 관리할 수 있다는 점에서 매력적이라 생각합니다.&lt;br&gt;&#xA;현재는 막 깃허브 블로그를 꾸려서 적응해가는 단계에 불과하지만,&lt;br&gt;&#xA;웹에서 정적 파일을 수집하는 기술을 적용할 수 있다면 중복된 자료를 생성할 필요 없이&lt;br&gt;&#xA;TIL 저장소 자체를 블로그 포스트 저장소로도 활용할 수 있을 것이라 기대합니다.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
